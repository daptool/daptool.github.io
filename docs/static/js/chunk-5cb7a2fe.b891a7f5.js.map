{"version":3,"sources":["webpack:///./src/components/dashboard/TradingViewWidget.vue?2579","webpack:///../../../src/components/VCard/index.ts","webpack:///../../../src/components/VCard/VCard.ts","webpack:///./src/components/dashboard/TradingViewWidget.vue?b675","webpack:///src/components/dashboard/TradingViewWidget.vue","webpack:///./src/components/dashboard/TradingViewWidget.vue?a2c3","webpack:///./src/components/dashboard/TradingViewWidget.vue"],"names":["VCardActions","createSimpleFunctional","VCardSubtitle","VCardText","VCardTitle","VCard","mixins","Loadable","Routable","VSheet","extend","name","props","flat","Boolean","hover","img","String","link","loaderHeight","type","Number","default","raised","computed","classes","options","call","this","isClickable","loading","disabled","styles","style","background","methods","genProgress","render","$createElement","staticClass","key","h","generateRouteLink","tag","data","attrs","tabindex","setBackgroundColor","color","$slots","_vm","_h","_c","_self","class","show","ref","container_id","staticRenderFns","script_id","tradingview","technical","interval","width","height","isTransparent","symbol","locale","showIntervalTabs","colorTheme","largeChartUrl","script","crypto_market","defaultColumn","screener_type","displayCurrency","single_ticker","ticker_tape","symbols","description","proName","showSymbolLogo","displayMode","mapState","watch","currentChain","val","document","mounted","setTimeout","getScriptElement","updateOnloadListener","onload","oldOnload","scriptExists","appendScript","initWidget","component"],"mappings":"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","file":"static/js/chunk-5cb7a2fe.b891a7f5.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TradingViewWidget.vue?vue&type=style&index=0&id=3dc6cd54&scoped=true&lang=css&\"","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{class:_vm.show === 'ticker_tape' ? 'trading-view-widget tape_background' : 'trading-view-widget'},[_c('v-card-text',{staticClass:\"center_widget\"},[_c('div',{ref:\"tradingview\",staticClass:\"tradingview-widget-container\",attrs:{\"id\":_vm.container_id}},[_c('div',{staticClass:\"tradingview-widget-container__widget\"})])])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <v-card :class=\"show === 'ticker_tape' ? 'trading-view-widget tape_background' : 'trading-view-widget'\">\n        <v-card-text class=\"center_widget\">\n            <div :id=\"container_id\" ref=\"tradingview\" class=\"tradingview-widget-container\">\n                <div class=\"tradingview-widget-container__widget\"></div>\n            </div>\n        </v-card-text>\n    </v-card>\n  \n</template>\n\n<script>\n\n    import { endpoints } from '@/store/constants';\n    import { mapState } from 'vuex';\n\n    export default {\n        name: 'TradingViewWidget',\n        \n        props: {\n            show: String\n        },\n  \n        data() {\n            return {\n                container_id: '',\n                script_id: '',\n\n                tradingview: {\n                    technical: {\n                        options: {\n                            interval: '1m',\n                            width: '330',\n                            height: '405',\n                            isTransparent: true,\n                            symbol: '',\n                            locale: 'en',\n                            showIntervalTabs: true,\n                            colorTheme: this.$vuetify.theme.dark ? 'dark' : 'light',\n                            largeChartUrl: 'https://www.tradingview.com/chart/'\n                        },\n\n                        script: 'https://s3.tradingview.com/external-embedding/embed-widget-technical-analysis.js'\n                    },\n\n                    crypto_market: {\n                        options: {\n                            width: '770',\n                            height: '450',\n                            defaultColumn: 'overview',\n                            screener_type: 'crypto_mkt',\n                            displayCurrency: 'USD',\n                            isTransparent: true,\n                            colorTheme: this.$vuetify.theme.dark ? 'dark' : 'light',\n                            locale: 'en'\n                        },\n\n                        script: 'https://s3.tradingview.com/external-embedding/embed-widget-screener.js'\n                    },\n\n                    single_ticker: {\n                        options: {\n                            symbol: '',\n                            width: '100%',\n                            colorTheme: this.$vuetify.theme.dark ? 'dark' : 'light',\n                            isTransparent: true,\n                            locale: 'en',\n                            largeChartUrl: 'https://www.tradingview.com/chart/'\n                        },\n\n                        script: 'https://s3.tradingview.com/external-embedding/embed-widget-single-quote.js'\n                    },\n\n                    ticker_tape: {\n                        options: {\n                            symbols: [\n                                { description: 'BTC', proName: 'BINANCE:BTCUSDT' },\n                                { description: 'ETH', proName: 'BINANCE:ETHUSDT' },\n                                { description: 'BNB', proName: 'BINANCE:BNBUSDT' },\n                                { description: 'MATIC', proName: 'BINANCE:MATICUSDT' },\n                                { description: 'AVAX', proName: 'BINANCE:AVAXUSDT' },\n                                { description: 'FTM', proName: 'BINANCE:FTMUSDT' }\n                            ],\n                            showSymbolLogo: true,\n                            colorTheme: this.$vuetify.theme.dark ? 'dark' : 'light',\n                            isTransparent: true,\n                            largeChartUrl: 'https://www.tradingview.com/chart/',\n                            displayMode: 'adaptive',\n                            locale: 'en'\n                        },\n\n                        script: 'https://s3.tradingview.com/external-embedding/embed-widget-ticker-tape.js'\n                    }\n                }\n            }\n        },\n\n        computed: {\n            ...mapState({\n                'currentChain': state => state.chain.currentChain\n            })\n        },\n\n        watch: {\n            currentChain(val) {\n                if (this.show !== 'single_ticker' && this.show !== 'technical') {\n                    return;\n                }\n\n                const chain = endpoints.filter( el => el.id === val )[0];\n                if (typeof chain === 'undefined') {\n                    return;\n                }\n\n                this.tradingview[this.show].options.symbol = 'BINANCE:' + chain.nativeCurrency.symbol + 'USDT';\n\n                document.getElementById(this.container_id).innerHTML = \"\"; \n                \n                const script = document.createElement('script');\n                script.id = this.script_id;\n                script.type = 'text/javascript';\n                script.async = true;\n                script.onload = this.initWidget;\n                script.textContent = JSON.stringify(this.tradingview[this.show].options);\n                script.src = this.tradingview[this.show].script;\n\n                this.$refs.tradingview.appendChild(script);\n            }\n        },\n\n        mounted() {\n            const from = this.tradingview[this.show].script.lastIndexOf('/') + 1;\n            const to = this.tradingview[this.show].script.lastIndexOf('.js');\n            const id = this.tradingview[this.show].script.slice(from, to);\n            \n            this.container_id = id + '_cont';\n            this.script_id = id + '_script';\n\n            setTimeout( () => this.appendScript(this.initWidget), 500);\n        },\n\n        methods: {\n            getScriptElement() {\n                return document.getElementById(this.script_id);\n            },\n\n            updateOnloadListener(onload) {\n                const script = this.getScriptElement();\n                const oldOnload = script.onload;\n                return (script.onload = () => {\n                    oldOnload();\n                    onload();\n                })\n            },\n\n            scriptExists() {\n                return this.getScriptElement() !== null;\n            },\n\n            appendScript(onload) {\n\n                if (this.scriptExists()) {\n                    if (typeof TradingView === 'undefined') {\n                        this.updateOnloadListener(onload);\n                        return;\n                    }\n\n                    onload();\n                    return;\n                }\n\n                if (this.show === 'single_ticker' || this.show === 'technical') {\n                    const chain = endpoints.filter( el => el.id === this.currentChain )[0];\n                    if (chain) {\n                        this.tradingview[this.show].options.symbol = 'BINANCE:' + chain.nativeCurrency.symbol + 'USDT';\n                    }\n                }\n\n                const script = document.createElement('script');\n                script.id = this.script_id;\n                script.type = 'text/javascript';\n                script.async = true;\n                script.onload = onload;\n                script.textContent = JSON.stringify(this.tradingview[this.show].options);\n                script.src = this.tradingview[this.show].script;\n\n                this.$refs.tradingview.appendChild(script);\n            },\n\n            initWidget() {\n                if (typeof TradingView === 'undefined') {\n                    return;\n                }\n\n                new window.TradingView.widget(Object.assign({ container_id: this.container_id }));\n            }\n        }\n    }\n\n</script>\n\n<style scoped>\n\n    .trading-view-widget {\n        min-width: 350px;\n    }\n\n    @media only screen and (min-width: 940px) {\n        .trading-view-widget:not(.tape_background) {\n            max-width: 350px;\n        }\n    }\n\n    .center_widget {\n        display: flex;\n        justify-content: center;\n    }\n\n    .tape_background {\n        background: rgba(0, 0, 0, 0) !important;\n        box-shadow: 0 0 0px 0px #000000 !important;\n        margin-bottom: 15px;\n    }\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TradingViewWidget.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TradingViewWidget.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TradingViewWidget.vue?vue&type=template&id=3dc6cd54&scoped=true&\"\nimport script from \"./TradingViewWidget.vue?vue&type=script&lang=js&\"\nexport * from \"./TradingViewWidget.vue?vue&type=script&lang=js&\"\nimport style0 from \"./TradingViewWidget.vue?vue&type=style&index=0&id=3dc6cd54&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3dc6cd54\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\ninstallComponents(component, {VCard,VCardText})\n"],"sourceRoot":""}